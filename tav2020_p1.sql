-- EXTRACCION DE DATOS PARA CARGA FAMILIAR
/*SELECT E.NUMRUT_EMP, 
CASE
  WHEN COUNT(CF.NUMRUT_CARGA) BETWEEN 1 AND 2 THEN (COUNT(CF.NUMRUT_CARGA) * 1500)
  WHEN COUNT(CF.NUMRUT_CARGA) > 2 THEN (COUNT(CF.NUMRUT_CARGA) * 1000)
  ELSE 0
END V_CARGA
FROM EMPLEADO E
LEFT JOIN CARGA_FAMILIAR CF ON (E.NUMRUT_EMP = CF.NUMRUT_EMP)
GROUP BY E.NUMRUT_EMP;
*/
-- EXTRACCION DE DATOS PARA MOVILIZACION
--SELECT * FROM COMUNA ORDER BY 2;
/*
UPDATE PORC_MOVILIZACION
SET PORC_MOV = 50
WHERE SEC_MOVILIZACION = 1;

INSERT INTO PORC_MOVILIZACION VALUES (2, 300001, 1000000, 30);
INSERT INTO PORC_MOVILIZACION VALUES (3, 1000001, 2500000, 20);
INSERT INTO PORC_MOVILIZACION VALUES (4, 2500001, 8000000, 5);
COMMIT;


SELECT NUMRUT_EMP, 
CASE
  WHEN ID_COMUNA IN (91, 105, 107) THEN ROUND(30000 + ((SUELDO_BASE_EMP * PM.PORC_MOV)/100))
  WHEN ID_COMUNA IN (114, 117, 118, 119, 124, 122) THEN ROUND(50000 + ((SUELDO_BASE_EMP * PM.PORC_MOV)/100))
  ELSE ROUND((SUELDO_BASE_EMP * PM.PORC_MOV)/100)
END V_MOV
FROM EMPLEADO E
JOIN PORC_MOVILIZACION PM ON(E.SUELDO_BASE_EMP BETWEEN PM.SUELDO_BASE_INF AND PM.SUELDO_BASE_SUP);


-- EXTRACCION DE DATOS PARA ASIGNACION ESPECIAL AÑOS DE SERVICIO
SELECT NUMRUT_EMP,
ROUND((SUELDO_BASE_EMP * PBC.PORC_BONIF)/100) A_ESP
FROM EMPLEADO E
JOIN PORC_BONIF_ANNOS_CONTRATO PBC ON(ROUND(MONTHS_BETWEEN((SYSDATE-30),E.FECING_EMP)/12) BETWEEN PBC.ANNOS_INFERIOR AND PBC.ANNOS_SUPERIOR)
;


-- EXTRACCION DE DATOS PARA COMISION VENTAS
SELECT * FROM COMISION_VENTA;
SELECT * FROM BOLETA;

SELECT E.NUMRUT_EMP,
SUM(CV.VALOR_COMISION)
FROM EMPLEADO E
JOIN BOLETA B ON (E.NUMRUT_EMP = B.NUMRUT_EMP)
JOIN COMISION_VENTA CV ON (B.NRO_BOLETA = CV.NRO_BOLETA)
WHERE TO_CHAR(B.FECHA_BOLETA, 'MM-YYYY') = '12-2019'
GROUP BY E.NUMRUT_EMP;


-- EXTRACCION DE DATOS ASIGNACION ESCOLARIDAD
SELECT * FROM ASIG_ESCOLARIDAD;
SELECT * FROM EMPLEADO;

SELECT NUMRUT_EMP,
ROUND(SUELDO_BASE_EMP * (AE.PORC_ASIG_ESCOLARIDAD/100)) A_ESC
FROM EMPLEADO E
JOIN ASIG_ESCOLARIDAD AE ON(E.ID_ESCOLARIDAD = AE.ID_ESCOLARIDAD);


TYPE tipo_compuesto IS RECORD (
nombre VARCHAR(25),
apellido VARCHAR(25),
sueldo NUMBER
);
i tipo_compuesto;
*/
-- PROCESO TABLA HABER_CALC_MES
SET SERVEROUTPUT ON;
DECLARE
  TYPE v_compuesta IS RECORD (
    v_carga_fam NUMBER,
    v_mov_ad NUMBER,
    v_colacion NUMBER := 40000,
    v_fecha_proc VARCHAR2(7 CHAR)
    );
  com v_compuesta;
-- CURSOR INICIAL  
  CURSOR v_cursor1 IS
  SELECT * FROM EMPLEADO;
-- CURSOR ASIGNACION AÑOS
  CURSOR c_asig_annos IS
  SELECT NUMRUT_EMP,
  ROUND((SUELDO_BASE_EMP * PBC.PORC_BONIF)/100) A_ESP
  FROM EMPLEADO E
  JOIN PORC_BONIF_ANNOS_CONTRATO PBC ON(ROUND(MONTHS_BETWEEN((SYSDATE-30),E.FECING_EMP)/12) BETWEEN PBC.ANNOS_INFERIOR AND PBC.ANNOS_SUPERIOR);
-- CURSOR CARGA FAMILIAR
  CURSOR c_cargafam IS
  SELECT E.NUMRUT_EMP, 
  CASE
    WHEN COUNT(CF.NUMRUT_CARGA) BETWEEN 1 AND 2 THEN (COUNT(CF.NUMRUT_CARGA) * 1500)
    WHEN COUNT(CF.NUMRUT_CARGA) > 2 THEN (COUNT(CF.NUMRUT_CARGA) * 1000)
    ELSE 0
  END V_CARGA
  FROM EMPLEADO E
  LEFT JOIN CARGA_FAMILIAR CF ON (E.NUMRUT_EMP = CF.NUMRUT_EMP)
  GROUP BY E.NUMRUT_EMP;
-- CURSOR MOVILIZACION
  CURSOR c_movi IS
  SELECT NUMRUT_EMP, 
  CASE
    WHEN ID_COMUNA IN (91, 105, 107) THEN ROUND(30000 + ((SUELDO_BASE_EMP * PM.PORC_MOV)/100))
    WHEN ID_COMUNA IN (114, 117, 118, 119, 124, 122) THEN ROUND(50000 + ((SUELDO_BASE_EMP * PM.PORC_MOV)/100))
    ELSE ROUND((SUELDO_BASE_EMP * PM.PORC_MOV)/100)
  END V_MOV
  FROM EMPLEADO E
  JOIN PORC_MOVILIZACION PM ON(E.SUELDO_BASE_EMP BETWEEN PM.SUELDO_BASE_INF AND PM.SUELDO_BASE_SUP);
-- CURSOR COMISION VENTAS
  CURSOR c_comvent IS
  SELECT E.NUMRUT_EMP, SUM(CV.VALOR_COMISION) COMISION FROM EMPLEADO E
  JOIN BOLETA B ON (E.NUMRUT_EMP = B.NUMRUT_EMP)
  JOIN COMISION_VENTA CV ON (B.NRO_BOLETA = CV.NRO_BOLETA)
  WHERE TO_CHAR(B.FECHA_BOLETA, 'MM-YYYY') = '12-2019'
  GROUP BY E.NUMRUT_EMP;
-- CURSOR ESCOLARIDAD
  CURSOR c_escol IS
  SELECT NUMRUT_EMP,
  ROUND(SUELDO_BASE_EMP * (AE.PORC_ASIG_ESCOLARIDAD/100)) A_ESC
  FROM EMPLEADO E
  JOIN ASIG_ESCOLARIDAD AE ON(E.ID_ESCOLARIDAD = AE.ID_ESCOLARIDAD);
BEGIN
  FOR a IN v_cursor1 LOOP
    FOR b IN c_asig_annos LOOP
      FOR c IN c_cargafam LOOP
        FOR e IN c_movi LOOP
          FOR f IN c_comvent LOOP
            FOR g IN c_escol LOOP
            END LOOP;
          END LOOP;
        END LOOP;
      END LOOP;
    END LOOP;
/*
    INSERT INTO HACER_CALC_MES VALUES (SEQ_CODEMP.NEXTVAL, a.NUMRUT_EMP, 12, 2019, a.SUELDO_BASE_EMP, v_asi.A_ESP, v_c.V_CARGA, v_m.V_MOV, com.vcolacion,
    v_v.COMISION, v_e.A_ESC);*/ 
  END LOOP;
END;



/*
SELECT * FROM HABER_CALC_MES;

CREATE TABLE HABER_CALC_MES
(cod_emp NUMBER(10) NOT NULL PRIMARY KEY,
numrut_emp NUMBER(10) NOT NULL,
 mes_proceso NUMBER(2) NOT NULL,
 anno_proceso NUMBER(4) NOT NULL,
 VALOR_SUELDO_BASE NUMBER(8) NOT NULL,
 VALOR_ASIG_ANNOS NUMBER(8) NOT NULL,
 VALOR_CARGAS_FAM    NUMBER(8),
 VALOR_MOVILIZACION NUMBER(8) NOT NULL,
 VALOR_COLACION NUMBER(8),
 VALOR_COM_VENTAS NUMBER(8),
 VALOR_TOT_HABERES NUMBER(10) NOT NULL,
 CONSTRAINT PK_HABER_CALC_MES PRIMARY KEY (numrut_emp,mes_proceso,anno_proceso),
 CONSTRAINT FK_HABER_CALC_VENDEDOR FOREIGN KEY(numrut_emp) REFERENCES empleado(numrut_emp));



ALTER TABLE HABER_CALC_MES ADD COD_EMP NUMBER(10) NOT NULL;
*/